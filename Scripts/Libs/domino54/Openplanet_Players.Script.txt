/**
 * @name Openplanet_Players.Script.txt
 * @author domino54
 * @version 2024-10-05
 */

#Const Version      "2024-10-05"
#Const ScriptName   "Libs/domino54/Openplanet_Players.Script.txt"

#Include "TextLib" as TL

#Const C_LibOpenplanet_ExtraToolRegex "^Openplanet ([\\w\\.-]+(?:[\\w\\.-]+)+) \\((\\w+), (\\w+), ([\\d-]+)\\)"

// ---------------------------------- //
// Structs
// ---------------------------------- //

#Struct K_OpenplanetInfo {
  Text Version;
  Text Branch;
  Text BuildName;
  Text BuildDate;
}

// ---------------------------------- //
// Global variables
// ---------------------------------- //

declare K_OpenplanetInfo[Text] G_LibOpenplanet_PlayerInfo;

// ---------------------------------- //
// Private functions
// ---------------------------------- //

CPlayer Private_GetPlayer(CUIConfig _UI) {
  declare CNod Context = This;

  switchtype (Context) {
    case CTmMode: {
      return (Context as CTmMode).GetPlayer(_UI);
    }
    case CSmMode: {
      return (Context as CSmMode).GetPlayer(_UI);
    }
  }

  return Null;
}

// ---------------------------------- //
// Public functions
// ---------------------------------- //

K_OpenplanetInfo TestForOpenplanet(Text _Value) {
  declare Match = TL::RegexMatch(C_LibOpenplanet_ExtraToolRegex, _Value, "");

  if (Match.count < 5) return K_OpenplanetInfo {};

  return K_OpenplanetInfo {
    Version = Match[1],
    Branch = Match[2],
    BuildName = Match[3],
    BuildDate = Match[4]
  };
}

Void SetPlayerOpenplanetInstalled(Text _Login, K_OpenplanetInfo _OpenplanetInfo) {
  if (_Login == "" || _OpenplanetInfo.Version == "") return;

  G_LibOpenplanet_PlayerInfo[_Login] = _OpenplanetInfo;
}

Void SetPlayerOpenplanetInstalled(Text _Login, Text _Version, Text _Branch, Text _BuildName, Text _BuildDate) {
  SetPlayerOpenplanetInstalled(_Login, K_OpenplanetInfo {
    Version = _Version,
    Branch = _Branch,
    BuildName = _BuildName,
    BuildDate = _BuildDate
  });
}

Void SetPlayerOpenplanetNotInstalled(Text _Login) {
  if (_Login == "") return;

  declare Removed = G_LibOpenplanet_PlayerInfo.removekey(_Login);
}

Boolean HasOpenplanet(Text _Login) {
  return G_LibOpenplanet_PlayerInfo.existskey(_Login);
}

Boolean HasOpenplanet(CScore _Score) {
  if (_Score == Null || _Score.User == Null) return False;

  return HasOpenplanet(_Score.User.Login);
}

Boolean HasOpenplanet(CUser _User) {
  if (_User == Null) return False;

  return HasOpenplanet(_User.Login);
}

Boolean HasOpenplanet(CPlayer _Player) {
  if (_Player == Null || _Player.User == Null) return False;

  return HasOpenplanet(_Player.User.Login);
}

Boolean HasOpenplanet(CClient _Client) {
  if (_Client == Null || _Client.User == Null) return False;

  return HasOpenplanet(_Client.User.Login);
}

Boolean HasOpenplanet(CUIConfig _UI) {
  if (_UI == Null) return False;

  return HasOpenplanet(Private_GetPlayer(_UI));
}

