#Include "Libs/Nadeo/Common/Core/Logger.Script.txt"														as Logger

#Include "Libs/Nadeo/MP4/TitlePackMaker/Components/Component_Campaign/CampaignController.Script.txt"	as CampaignController
#Include "Libs/Nadeo/MP4/TitlePackMaker/Components/Component_Online/OnlineController.Script.txt"		as OnlineController
#Include "Libs/Nadeo/MP4/TitlePackMaker/Components/Component_LocalPlay/LocalPlayController.Script.txt"	as LocalPlayController
#Include "Libs/Nadeo/MP4/TitlePackMaker/Components/Component_Editor/EditorController.Script.txt"		as EditorController

#Const C_CAMPAIGN	"Solo"
#Const C_ONLINE		"Online"
#Const C_LOCALPLAY	"LocalPlay"
#Const C_EDITOR		"Editor"

Boolean[Integer] GetActiveSections()
{
	declare Boolean[Integer] Result;
	declare Text[Integer] SectionsActivation =
[1 => C_CAMPAIGN,
2 => C_ONLINE,
3 => C_LOCALPLAY,
4 => C_EDITOR];
	declare Boolean[Text] IsSectionActive =
[C_CAMPAIGN => CampaignController::IsActive(),
C_ONLINE => OnlineController::IsActive(),
C_LOCALPLAY => LocalPlayController::IsActive(),
C_EDITOR => EditorController::IsActive()];
	foreach(SectionId => Section in SectionsActivation) {
		Result[SectionId] = IsSectionActive[Section];
	}
	return Result;
}

Integer[] GetActivatedStyleSections()
{
	declare Integer[] Result;
	declare Integer[Text] SectionsActivation =
[C_CAMPAIGN => 0,
C_ONLINE => 1,
C_LOCALPLAY => 2,
C_EDITOR => 3];
	declare Boolean[Text] IsSectionActivated =
[C_CAMPAIGN => CampaignController::IsActive(),
C_ONLINE => OnlineController::IsActive(),
C_LOCALPLAY => LocalPlayController::IsActive(),
C_EDITOR => EditorController::IsActive()];
	foreach(Section => SectionId in SectionsActivation) {
		if (IsSectionActivated[Section]) {
			Result.add(SectionId);
		}
	}
	return Result;
}

Void SetActive(Text _ControllerId, Boolean _IsActive)
{
	switch(_ControllerId) {
		case C_CAMPAIGN : {
			CampaignController::SetActive(_IsActive);
		}
		case C_ONLINE : {
			OnlineController::SetActive(_IsActive);
		}
		case C_LOCALPLAY : {
			LocalPlayController::SetActive(_IsActive);
		}
		case C_EDITOR : {
			EditorController::SetActive(_IsActive);
		}
		default : {
			Logger::Warn("SetActive appel√© sur autre chose qu'une section");
		}
	}
}