#Include "Libs/Nadeo/Common/ManialinkTools/Manialink3WPrevAnims.Script.txt"			as Manialink
#Include "TextLib"												as TextLib

#Const Label_Score_HiddenPos	<15., 0.>
#Const Label_Score_ShownPos		<0., 0.>
#Const Label_Zone_HiddenPos		<-41., 0.>
#Const Label_Zone_ShownPos		<-13., 0.>
#Const QuadSize					<48.5, 14.>
#Const ContourSize				0.4

Text Build() {
	declare Text MLText = """
<manialink version="3" name="L_RankingModule">
	<frame id="Frame_All"  pos="-100 50" z-index="20" hidden="0">
		<quad halign="center" valign="top" pos="0 13." z-index="-1" size="48. 35.0"  opacity="0.4" bgcolor="000"/>
		<frame id="Frame_Accel" pos="0 7">
			<entry id="Entry_Accel" pos="5 0" size="6 6" halign="center" valign="center" default="1." textsize="2" scriptevents="1" />
			<label id="Label_Accel"  halign="right" valign="center" size="20"      opacity="1." textsize="2" textcolor="fff" text="Acceleration Coef" pos="0 0"/>
		</frame>
		<frame id="Frame_Control" pos="0 0">
			<entry id="Entry_Control" pos="5 0" size="6 6" halign="center" valign="center" default="1." textsize="2" scriptevents="1" />
			<label id="Label_Control"  halign="right" valign="center" size="20"      opacity="1." textsize="2" textcolor="fff" text="Control Coef" pos="0 0"/>
		</frame>
		<frame id="Frame_Grav" pos="0 -7">
			<entry id="Entry_Gravity" pos="5 0" size="6 6" halign="center" valign="center" default="1." textsize="2" scriptevents="1" />
			<label id="Label_Gravity"  halign="right" valign="center" size="20"      opacity="1." textsize="2" textcolor="fff" text="Gravity Coef" pos="0 0"/>
		</frame>
		<label id="Label_SaveQuit" halign="center" valign="center" style="CardButtonMedium" pos="0. -15." z-index="2" text="Save & Quit" scriptevents="1"/>
	</frame>
	
	
	<script><!--
		#Include "TextLib" as TL
		#Const C_aAa  0
		
		{{{Manialink::GetIncludes()}}}
		

		declare Boolean			G_aAa;

		{{{Manialink::Load()}}}
	
		Void Init()
		{

		}

		Void UpdateEntries() {
			declare Real Page_AccCoef for Page;
			declare Real Page_ConCoef for Page;
			declare Real Page_GraCoef for Page;

			declare Real[] Values  = [Page_AccCoef, Page_ConCoef, Page_GraCoef];
			declare Text[] Entries = ["Entry_Accel", "Entry_Control", "Entry_Gravity"];
			for(I, 0, 2)
			{
				//declare CMlFrame Frame_Settings <=> (Page.MainFrame.GetFirstChild("Frame_Settings"^I)	as CMlFrame);
				declare CMlEntry Entry_Settings <=> (Page.MainFrame.GetFirstChild(Entries[I])	as CMlEntry);
				Entry_Settings.Value = Values[I]^"";
			}
		}

		main() {
			
			Init();

			while(True) {
				
				yield;
				if(! PageIsVisible) continue;
				LibManialink_AnimLoop();
				

				foreach(Event in PendingEvents) {
					switch(Event.Type) {

						case CMlEvent::Type::MenuNavigation: {
							switch(Event.MenuNavAction) {
								case CMlEvent::EMenuNavAction::Action1 : {

								}
								case CMlEvent::EMenuNavAction::Cancel : {
								}
							}
						}
						case CMlEvent::Type::MouseClick: {
							if (Event.ControlId == "Label_SaveQuit")
							{
								SendCustomEvent("QuitAndSave", [""]);
							}
						}
						case CMlEvent::Type::MouseOver: {
							if (Event.ControlId == "Quad_Section")
							{

							}
						}
						case CMlEvent::Type::MouseOut: {
							if (Event.ControlId == "Quad_Section")
							{

							}
						}
						case CMlEvent::Type::PluginCustomEvent: {
							
							switch(Event.CustomEventType) {
								case "RankingSent" : {
									declare Text	Ranking_ZoneScores	for Page;
									declare Text[]	Ranking_ZoneTexts	for Page;
								}
								case "UpdateEntries" : {
									UpdateEntries();
								}
							}
						}
						case CMlEvent::Type::EntrySubmit: {
							if (Event.ControlId == "Entry_Gravity")
							{
								declare Result = (Event.Control as CMlEntry);
								declare Real Value = TL::ToReal(Result.Value);
								if(Value < 0.2) Value = 0.2;
								SendCustomEvent("Change_GravityCoef", [Result.Value]);
							}
							if (Event.ControlId == "Entry_Accel")
							{
								declare Result = (Event.Control as CMlEntry);
								declare Real Value = TL::ToReal(Result.Value);
								if(Value < 0.2) Value = 0.2;
								SendCustomEvent("Change_AccelCoef", [Result.Value]);
							}
							if (Event.ControlId == "Entry_Control")
							{
								declare Result = (Event.Control as CMlEntry);
								declare Real Value = TL::ToReal(Result.Value);
								if(Value < 0.2) Value = 0.2;
								SendCustomEvent("Change_ControlCoef", [Result.Value]);
							}
						}
					}
				}
			}
		}
	--></script>
</manialink>
	""";
	return MLText;
}