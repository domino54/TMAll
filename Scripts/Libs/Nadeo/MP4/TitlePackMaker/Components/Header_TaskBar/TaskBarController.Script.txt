#Include "Libs/Nadeo/Common/Core/MenuLayers.Script.txt"											as Layers
#Include "Libs/Nadeo/Common/Core/Pages.Script.txt"												as Pages
#Include "Libs/Nadeo/Common/Core/Logger.Script.txt"												as Logger
#Include "Libs/Nadeo/Common/Core/SectionsManager.Script.txt"										as SectionsManager
#Include "TextLib"																			as TextLib

//Layers
#Include "Libs/Nadeo/MP4/TitlePackMaker/Components/Header_TaskBar/LBTaskBar.Script.txt"					as LBTaskBar

#Const C_TaskBar			 "TaskBar"

declare Text[][Text] MenuNames;
declare Text[][Text] MenuOpenableMenu;

Void AddTaskBar(Text _NameId, Text[] _MenuNames)
{
	if(!MenuNames.existskey(_NameId)) MenuNames[_NameId] = [];
	MenuNames[_NameId] = _MenuNames;
}

Void AddOpenableMenu(Text _NameId, Text[] _MenuNames)
{
	if(!MenuOpenableMenu.existskey(_NameId)) MenuOpenableMenu[_NameId] = [];
	MenuOpenableMenu[_NameId] = _MenuNames;

}

Text[] GetTaskBarNames(Text _NameId)
{
	if(!MenuNames.existskey(_NameId)) return [""];
	return MenuNames[_NameId];
}

Text[] GetOpenableMenu(Text _NameId)
{
	if(!MenuOpenableMenu.existskey(_NameId)) return [""];
	return MenuOpenableMenu[_NameId];
}

Void UpdateTaskBar(Text _TaskBarNameId)
{

	declare Text[] TaskBarName = GetTaskBarNames(_TaskBarNameId);
	declare CUILayer LayerToSend <=> Layers::Get(C_TaskBar);
	if(LayerToSend == Null) return;
	
	declare Text[] MenuOpenableMenu for LayerToSend.LocalPage;
	MenuOpenableMenu = GetOpenableMenu(_TaskBarNameId);

	LayerCustomEvent(LayerToSend, "UpdateTaskBar", TaskBarName);
}

Void Build(Text _LayerName, Boolean _Attach) {

	declare Text MLText;
	switch(_LayerName) {
		case(C_TaskBar):{
			MLText = LBTaskBar::Build();
		}
	}

	if(MLText == "") {
		Logger::Warn("Unknown Page: "^_LayerName);
		return;
	}
	
	Layers::Create(_LayerName, MLText);
	
	declare CUILayer Layer <=> Layers::Get(_LayerName);
	declare Text Page_LayerName for Layer.LocalPage;
	
	Page_LayerName = _LayerName;
	if(_Attach) Layers::Attach(_LayerName);
}

Void Build(Text _LayerName) {
	Build(_LayerName, False);

}

Void Load() {
	Build(C_TaskBar, True);
	//Pages::Compose("TaskBar", ["TaskBar"]);
}

Void Show() {
	LayerCustomEvent(Layers::Get(C_TaskBar), "Show", []);
}

Void Hide() {
	LayerCustomEvent(Layers::Get(C_TaskBar), "Hide", []);
}

Void UpdateTitleAndLogo(Boolean _Visibility)
{
	LayerCustomEvent(Layers::Get(C_TaskBar), "UpdateTitleAndLogo", [TextLib::ToText(_Visibility)]);
}

Void Loop() {
	foreach(Event in PendingEvents) {
		if(Event.Type != CManiaAppEvent::EType::LayerCustomEvent) continue;
		switch(Event.CustomEventType) {
			case "MyCustomEvent": {
			
			}
		}
	}
}

Text GenerateXML ()
{
	return "";
}