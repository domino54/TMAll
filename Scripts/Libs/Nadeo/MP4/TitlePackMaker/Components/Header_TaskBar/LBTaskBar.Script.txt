#Include "Libs/Nadeo/MP4/Common/DesignManialinks.Script.txt"		as DesignManialinks
#Include "Libs/Nadeo/MP4/Common/ManialinkTools/FontManager.Script.txt"				as Font

#Const C_ImgBase      "file://Media/MEDIABROWSER_HiddenResources/Common/Images/Menus/Buttons/"

Text Build() {
	declare Real	SizeXQuad		= 4.4;
	declare Real	SizeYQuad		= 4.4;

	declare Real	SizeXQuadIcon	= 15.;
	declare Real	SizeYQuadIcon	= 15.;

	declare Text IMGGlobal_Home        = C_ImgBase ^ "Global_Home.dds";
	declare Text IMGGlobal_Back        = C_ImgBase ^ "Global_Back.dds";

	declare Text Img_MainLogo			= "file://Media/MEDIABROWSER_HiddenResources/Maker/Images/General/MainLogo.dds";

	declare Text MainFont				= Font::GetFontName("Main");
	declare Text SubFont				= Font::GetFontName("SubTitle");
	declare Text MLText = """
<manialink version="3" name="L_TaskBar">
	<frame id="Frame_All"  z-index="9" hidden="1">
		<quad id="Quad_BlurryHeader" size="80 35" pos="-160 90" opacity="0" style="Bgs1" substyle="BgDialogBlur" bluramount="0.1"/>
		<frame id="ProjectNameAndLogo">
			<label id="MakerName" halign="left" valign="center" textfont="{{{MainFont}}}" pos="-130 77" z-index="2" textsize="19" textcolor="{{{DesignManialinks::GetColorCode_Overall()}}}" text="MAKER" size="45 0"/>
			<quad id="ProjectLogo" halign="center" valign="top" size="20. 20." pos="-144 85" z-index="80" image="{{{Img_MainLogo}}}" colorize="{{{DesignManialinks::GetColorCode_Overall()}}}" keepratio="Fit"/>
		</frame>

		<frame id="Header" pos="-101.3 62.6">
			<frame id="Frame_Home">
				<frame id="Frame_HomeLibButton">
					<quad id="Quad_Home" halign="center" valign="center" size="22 5.2"  pos="8 0" opacity="0." bgcolor="000" scriptevents="1"/>
					<quad id="Quad_HomeIcon" halign="center" valign="center" size="{{{SizeXQuad}}} {{{SizeYQuad}}}"  pos="0 0" opacity="1." image="{{{IMGGlobal_Home}}}" modulatecolor="{{{DesignManialinks::GetColorCode_Overall()}}}"/>
					<label id="Label_Home" halign="left"   valign="center" text="{{{_("Home")}}}" textfont="{{{SubFont}}}" textprefix="$t" pos="5 0" z-index="2" textsize="2" textcolor="{{{DesignManialinks::GetColorCode_Overall()}}}" opacity="1."/>
					<quad halign="right" valign="center" size="18 0.2" pos="16.6 -5.17" opacity="0.4" bgcolor="{{{DesignManialinks::GetColorCode_Overall()}}}"/>
					<quad halign="right" valign="center" size="1  0.4"  pos="16.6 -5.07" opacity="0.4" bgcolor="{{{DesignManialinks::GetColorCode_Overall()}}}"/>
				</frame>
			</frame>
			<frame id="Frame_Back" pos="-24.6 0">
				<quad id="Quad_Back" halign="center" valign="center" size="22 5.2"  pos="8 0" opacity="0." bgcolor="000" scriptevents="1"/>
				<quad id="Button_Cancel" halign="center" valign="center" size="{{{SizeXQuad+3.}}} {{{SizeYQuad+3.}}}" z-index="1" opacity="1.0" keepratio="Fit" />
				<quad id="Quad_BackIcon" halign="center" valign="center" size="{{{SizeXQuad}}} {{{SizeYQuad}}}" image="{{{IMGGlobal_Back}}}" modulatecolor="{{{DesignManialinks::GetColorCode_Overall()}}}"/>
				<label id="Label_Back" halign="left"   valign="center" text="{{{_("Back")}}}" textfont="{{{SubFont}}}" textprefix="$t" pos="5 0" z-index="2" textsize="2" textcolor="{{{DesignManialinks::GetColorCode_Overall()}}}" opacity="1."/>
				<quad halign="center" valign="center" size="21 0.2" pos="8.1 -5.2" opacity="0.4" bgcolor="{{{DesignManialinks::GetColorCode_Overall()}}}"/>
				<quad halign="center" valign="center" size="3 0.4"  pos="17.1 -5.1" opacity="0.4" bgcolor="{{{DesignManialinks::GetColorCode_Overall()}}}"/>
				<quad halign="center" valign="center" size="{{{SizeXQuadIcon}}} {{{SizeYQuadIcon}}}" z-index="1" opacity="0." bgcolor="000" style="Icons128x128_1" substyle="Back"/>
			</frame>
		</frame>
		<quad id="Quad_BlurryFooter" size="80 15" pos="-110 -75" opacity="0" style="Bgs1" substyle="BgDialogBlur" bluramount="0.1"/>
		<frame pos="50 -165" id="Footer">
			<frame pos="-145 84">
				<label id="Label_Save" textprefix="$t" text="{{{ //L16N |Verb, infinitive| On a button.
					_("Save")
					}}}"		pos="3 0" 	size="15 6" halign="center" valign="center"
					textfont="{{{SubFont}}}" textcolor="{{{DesignManialinks::GetColorCode_Overall()}}}" textsize="1"/>
				<quad id="Logo_Save" size="4 4" pos="-8 0" halign="center" valign="center"
					image="file://Media/MEDIABROWSER_HiddenResources/Maker/Images/TaskBar/Button_Save.dds"/>
				<quad id="Label_Save"	 halign="center" valign="center"
					image="file://Media/MEDIABROWSER_HiddenResources/Maker/Images/TaskBar/ButtonTile.dds"
					size="23 6.5" scriptevents="1" />
			</frame>

			<frame pos="-120 84">
				<label id="Label_Publish" textprefix="$t" text="{{{//L16N |Verb, infinitive| On a button to build the edited game.
					_("Make")}}}"	pos="3 0"	size="15 6" halign="center" valign="center"
					textfont="{{{SubFont}}}" textcolor="{{{DesignManialinks::GetColorCode_Overall()}}}" textsize="1"/>
				<quad id="Logo_Publish" size="4 4" pos="-8 0" halign="center" valign="center"
					image="file://Media/MEDIABROWSER_HiddenResources/Maker/Images/TaskBar/Button_Publish.dds"/>
				<quad id="Label_Publish" halign="center" valign="center"
					image="file://Media/MEDIABROWSER_HiddenResources/Maker/Images/TaskBar/ButtonTile.dds"
					size="23 6.5" scriptevents="1" />
			</frame>
		</frame>

	</frame>
	
	
	<script><!--
		#Include "TextLib" as TaskBar_TextLib
		
		declare CVideo[Text]	G_Videos;
		declare CMlQuad[Text]	G_VideoQuads;
		declare Text			G_Title;
	
		Void UpdateTitleAndLogo(Boolean _Visibility)
		{
			declare ProjectNameAndLogo <=> Page.GetFirstChild("ProjectNameAndLogo");
			ProjectNameAndLogo.Visible = _Visibility;
			declare Header <=> Page.GetFirstChild("Header");
			if (_Visibility) {
				Header.RelativePosition_V3 = <-101.3, 62.6>;
			} else {
				Header.RelativePosition_V3 = <-121.3, 81.4>;
			}
		}

		main() {
			SendCustomEvent("UpdateGlobalButtons", [""]);
			while(True) {
				yield;
				if(! PageIsVisible) continue;
				foreach(Event in PendingEvents) {
					switch(Event.Type) {

						case CMlEvent::Type::MenuNavigation: {
							switch(Event.MenuNavAction) {
								case CMlEvent::EMenuNavAction::Select : {
									//SendCustomEvent("GotoPage", ["StartDemo"]);
								}
								case CMlEvent::EMenuNavAction::Cancel : {
								}
							}
						}
						case CMlEvent::Type::MouseClick: {
							if (Event.ControlId == "Quad_Home")
							{
								SendCustomEvent("TaskBar_Home", [""]);
								(Page.GetFirstChild("Label_Home") as CMlLabel).TextColor = TaskBar_TextLib::ToColor("{{{DesignManialinks::GetColorCode_Overall()}}}");
							}
							else if (Event.ControlId == "Quad_Back")
							{
								SendCustomEvent("TaskBar_Back", [""]);
								(Page.GetFirstChild("Label_Back") as CMlLabel).TextColor = TaskBar_TextLib::ToColor("{{{DesignManialinks::GetColorCode_Overall()}}}");
							}
							else if (Event.ControlId == "Label_Save")
							{
								SendCustomEvent("TaskBar_Save", [""]);
								(Page.GetFirstChild("Label_Save") as CMlLabel).TextColor = TaskBar_TextLib::ToColor("{{{DesignManialinks::GetColorCode_Overall()}}}");
							}
							else if (Event.ControlId == "Label_Publish")
							{
								SendCustomEvent("TaskBar_Publish", [""]);
								(Page.GetFirstChild("Label_Publish") as CMlLabel).TextColor = TaskBar_TextLib::ToColor("{{{DesignManialinks::GetColorCode_Overall()}}}");
							}
						}
						case CMlEvent::Type::MouseOver: {
							if (Event.ControlId == "Quad_Home")
							{
								(Page.GetFirstChild("Label_Home") as CMlLabel).TextColor = TaskBar_TextLib::ToColor("FFF");
							}
							else if (Event.ControlId == "Quad_Back")
							{
								(Page.GetFirstChild("Label_Back") as CMlLabel).TextColor = TaskBar_TextLib::ToColor("FFF");
							}
							else if (Event.ControlId == "Label_Save")
							{
								(Page.GetFirstChild("Label_Save") as CMlLabel).TextColor = TaskBar_TextLib::ToColor("FFF");
							}
							else if (Event.ControlId == "Label_Publish")
							{
								(Page.GetFirstChild("Label_Publish") as CMlLabel).TextColor = TaskBar_TextLib::ToColor("FFF");
							}
						}
						case CMlEvent::Type::MouseOut: {
							if (Event.ControlId == "Quad_Home")
							{
								(Page.GetFirstChild("Label_Home") as CMlLabel).TextColor = TaskBar_TextLib::ToColor("{{{DesignManialinks::GetColorCode_Overall()}}}");
							}
							else if (Event.ControlId == "Quad_Back")
							{
								(Page.GetFirstChild("Label_Back") as CMlLabel).TextColor = TaskBar_TextLib::ToColor("{{{DesignManialinks::GetColorCode_Overall()}}}");
							}
							else if (Event.ControlId == "Label_Save")
							{
								(Page.GetFirstChild("Label_Save") as CMlLabel).TextColor = TaskBar_TextLib::ToColor("{{{DesignManialinks::GetColorCode_Overall()}}}");
							}
							else if (Event.ControlId == "Label_Publish")
							{
								(Page.GetFirstChild("Label_Publish") as CMlLabel).TextColor = TaskBar_TextLib::ToColor("{{{DesignManialinks::GetColorCode_Overall()}}}");
							}
						}
						case CMlEvent::Type::PluginCustomEvent: {
							
							switch(Event.CustomEventType) {
								case "Show" : {
									Page.GetFirstChild("Frame_All").Visible = True;
								}
								case "Hide" : {
									Page.GetFirstChild("Frame_All").Visible = False;
								}
								case "UpdateTitleAndLogo" : {
									declare Boolean Visibility = (Event.CustomEventData[0] == TaskBar_TextLib::ToText(True));
									UpdateTitleAndLogo(Visibility);
								}
							}
						}
					}
				}
			}
		}
	--></script>
</manialink>""";
	
	return MLText;
}