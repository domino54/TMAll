#Include "Libs/Nadeo/Common/Core/Logger.Script.txt"														as Logger

#Include "Libs/Nadeo/MP4/TitlePackMaker/Components/Component_Campaign/CampaignController.Script.txt"	as CampaignController
#Include "Libs/Nadeo/MP4/TitlePackMaker/Components/Component_Online/OnlineController.Script.txt"		as OnlineController
#Include "Libs/Nadeo/MP4/TitlePackMaker/Components/Component_LocalPlay/LocalPlayController.Script.txt"	as LocalPlayController
#Include "Libs/Nadeo/MP4/TitlePackMaker/Components/Component_Editor/EditorController.Script.txt"		as EditorController

#Const C_CAMPAIGN	"Solo"
#Const C_ONLINE		"Online"
#Const C_LOCALPLAY	"LocalPlay"
#Const C_EDITOR		"Editor"
#Const C_NEWS		"News"

declare Text G_NewsColor;

Void Load()
{
	G_NewsColor = "f00";
}

Text GetColor(Text _ControllerId)
{
	declare Text[Text] Colors =
[	C_CAMPAIGN	=> CampaignController::GetColor(),
	C_ONLINE	=> OnlineController::GetColor(),
	C_LOCALPLAY	=> LocalPlayController::GetColor(),
	C_EDITOR	=> EditorController::GetColor(),
	C_NEWS		=> G_NewsColor];
	if (!Colors.existskey(_ControllerId)) {
		Logger::Warn("GetColor appelé sur autre chose qu'une section");
		return "";
	}
	return Colors[_ControllerId];
}

Void SetColor(Text _ControllerId, Text _ColorCode)
{
	switch(_ControllerId) {
		case C_CAMPAIGN : {
			CampaignController::SetColor(_ColorCode);
		}
		case C_ONLINE : {
			OnlineController::SetColor(_ColorCode);
		}
		case C_LOCALPLAY : {
			LocalPlayController::SetColor(_ColorCode);
		}
		case C_EDITOR : {
			EditorController::SetColor(_ColorCode);
		}
		case C_NEWS : {
			G_NewsColor = _ColorCode;
		}
		default : {
			Logger::Warn("SetColor appelé sur autre chose qu'une section");
		}
	}
}