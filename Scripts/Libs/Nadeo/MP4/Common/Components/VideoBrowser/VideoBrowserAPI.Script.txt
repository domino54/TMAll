#Include "Libs/Nadeo/MP4/Common/Components/FileBrowser/FileBrowserAPI.Script.txt"	as FileBrowserAPI

#Const C_BasePath		"Media\\"
#Const C_BrowserName	"VideoBrowser"
#Const C_MediaType		CDataFileMgr::EMediaType::Image

Void Load()
{
	FileBrowserAPI::Load(C_BrowserName, C_BasePath, C_MediaType, "");
}

Text FullPath(Text _Path)
{
	return FileBrowserAPI::FullPath(C_BrowserName, _Path);
}

Void FetchData(Text _Path)
{
	FileBrowserAPI::FetchData(C_BrowserName, _Path);
}

Text FolderParentPath()
{
	return FileBrowserAPI::FolderParentPath(C_BrowserName);
}

Void SwitchFlatten()
{
	FileBrowserAPI::SwitchFlatten(C_BrowserName);
}

Void SwitchSortOrder()
{
	FileBrowserAPI::SwitchSortOrder(C_BrowserName);
}

Void SwitchSortCriterion()
{
	FileBrowserAPI::SwitchSortCriterion(C_BrowserName);
}

Text[Text] GetMetadataFromFile(Text _File)
{
	return FileBrowserAPI::GetMetadataFromFile(C_BrowserName, _File);
}

Text[] GetAllSortedFiles(Boolean _IsSortingFromDateRatherThanName, Boolean _IsSortingFromDescendingOrder)
{
	return FileBrowserAPI::GetAllSortedFiles(C_BrowserName, _IsSortingFromDateRatherThanName, _IsSortingFromDescendingOrder);
}

Text[] GetAllSortedFolders(Boolean _IsSortingFromDateRatherThanName, Boolean _IsSortingFromDescendingOrder)
{
	return FileBrowserAPI::GetAllSortedFolders(C_BrowserName, _IsSortingFromDateRatherThanName, _IsSortingFromDescendingOrder);
}

Text[Text] GetMetadata(Text _Path)
{
	return FileBrowserAPI::GetMetadata(C_BrowserName, _Path);
}

Void UpdateMainData()
{
	FileBrowserAPI::UpdateMainData(C_BrowserName);
}

Text[Text][] GetMainData() {
	return FileBrowserAPI::GetMainData(C_BrowserName);
}

Boolean HasFetched()
{
	return FileBrowserAPI::HasFetched(C_BrowserName);
}

Void InputPageUp()
{
	FileBrowserAPI::InputPageUp(C_BrowserName);
}

Void InputPageUpTen()
{
	FileBrowserAPI::InputPageUpTen(C_BrowserName);
}

Void InputPageDown()
{
	FileBrowserAPI::InputPageDown(C_BrowserName);
}

Void InputPageDownTen()
{
	FileBrowserAPI::InputPageDownTen(C_BrowserName);
}

Void InputFirstPage()
{
	FileBrowserAPI::InputFirstPage(C_BrowserName);
}

Void InputLastPage()
{
	FileBrowserAPI::InputLastPage(C_BrowserName);
}

Integer GetCurrentPageIndex()
{
	return FileBrowserAPI::GetCurrentPageIndex(C_BrowserName);
}

Integer GetMaxPages()
{
	return FileBrowserAPI::GetMaxPages(C_BrowserName);
}