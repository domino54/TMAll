#Include "Libs/Nadeo/Common/ManialinkTools/Manialink3WPrevAnims.Script.txt"			as Manialink
#Include "Libs/Nadeo/MP4/Common/Components/MenuButtonsOld/LBMenuButtons.Script.txt"					as MenuButtons
#Include "Libs/Nadeo/MP4/Common/ManialinkTools/FontManager.Script.txt" 			as Font

Text Build() {

	declare Real	SizeXQuad                = 76.0;
	declare Real	SizeYQuad                = 19.5;
	MenuButtons::SetLabelButtonPosition(<-5., -2.6>);

	declare Text	MainFont = Font::GetFontName("Main");
	declare Text MLText = """
<manialink version="3" name="L_NewMap">
{{{MenuButtons::IncludeInFrameModels(SizeXQuad, SizeYQuad, 8.)}}}
	<frame id="Frame_All">
		<frame id="TargetMove_Title" pos="35.">
			<label id="Label_Title" halign="left"  valign="center" text="{{{//L16N Title of the section
				_("Map Editor")}}}" textfont="{{{MainFont}}}" pos="-76.5 31.3" opacity="1." z-index="2" textsize="9." textcolor="fff"/>
		</frame>
		<frame id="TargetMove_Line" pos="35.">
			<frame pos="35. 0." >
				<frame id="Habillage_Menu_Down" pos="47.0 23.6" z-index="0" hidden="0">
					<quad id="Quad_Line0" halign="right" valign="top" size="158.3 0.2" pos="0. 0." opacity="1.0" bgcolor="fff" />
					<quad id="Quad_Line1" halign="right" valign="bottom" size="9.7 0.4" pos="0. 0." opacity="1.0" bgcolor="fff" />
				</frame>
			</frame>
		</frame>
{{{MenuButtons::IncludeInManialink()}}}
		<frame id="TargetMove_Angle"  pos="35.">
			<frame pos="35. 0." >
				<frame id="Habillage_Menu_Up" pos="-111.7  0.3">
					<quad id="Quad_Line0" halign="right" valign="bottom" size="2.2 0.7" opacity="1." bgcolor="fff"/>
					<quad id="Quad_Line1" halign="right" valign="top" size="0.7 1.5" opacity="1." bgcolor="fff"/>
				</frame>
			</frame>
		</frame>
	</frame>

	<script><!--
{{{Manialink::GetIncludes()}}}
{{{MenuButtons::Includes()}}}

{{{Manialink::Load()}}}

declare Boolean G_IsMoodPage;
{{{MenuButtons::Declares()}}}

{{{MenuButtons::Functions()}}}
		Void Reset()
		{
		}

		Void Init()
		{
			Reset();
MenuButtons_Init();
		}

		Void UpdateDisplay()
		{
		}

		Void ShowPage()
		{
			G_HideTime = -1;
			EnableMenuNavigation(True,False,Null,2);
			Reset();
			SendCustomEvent("UpdateBarreSection", ["NewMap"]);
			UpdateDisplay();
		}

		Void HidePage()
		{
			SendCustomEvent("DetachPage", ["NewMap"]);
		}

		
		Void LaunchTransitionHabillage(Real _TargetPosX, Integer _DecaleTime, Integer _Speed, Boolean _FadeIn)
		{
			declare Text[] Frame_Habillage = ["TargetMove_Line",
										"TargetMove_Angle",
										"TargetMove_Title"];
				
			declare Integer DecaleTime = _DecaleTime;
			for(I, 0, Frame_Habillage.count-1)
			{

				declare CMlFrame MyFrame      <=> (Page.MainFrame.GetFirstChild(Frame_Habillage[I])	as CMlFrame);
				//MyFrame.RelativePosition.X = 35.;
				LibManialink_AnimStop(MyFrame);
				LibManialink_SetTargetPosition(MyFrame, <_TargetPosX, MyFrame.RelativePosition.Y>);
				LibManialink_PresetAnimInsert(MyFrame, DecaleTime, _Speed +150, "EaseOutQuad");
				if(_FadeIn)
				{
					declare CMlQuad Quad_Line0 <=> (MyFrame.GetFirstChild("Quad_Line0")	as CMlQuad);
					declare CMlQuad Quad_Line1 <=> (MyFrame.GetFirstChild("Quad_Line1")	as CMlQuad);
					if(Quad_Line0 == Null ||Quad_Line1 == Null) continue;
					Quad_Line0.Opacity = 0.;
					Quad_Line1.Opacity = 0.;

					LibManialink_AnimStop(Quad_Line0);
					LibManialink_AnimStop(Quad_Line1);
					LibManialink_SetTargetOpacity(Quad_Line0, 1.0);
					LibManialink_PresetAnimInsert(Quad_Line0, DecaleTime, _Speed, "EaseOutQuad");
					LibManialink_SetTargetOpacity(Quad_Line1, 1.0);
					LibManialink_PresetAnimInsert(Quad_Line1, DecaleTime, _Speed, "EaseOutQuad");
				}
				DecaleTime += 150;
			}
			if(_FadeIn)
			{
				declare CMlLabel Label_Title <=> (Page.MainFrame.GetFirstChild("Label_Title")	as CMlLabel);
				Label_Title.Opacity = 0.;
				LibManialink_SetTargetOpacity(Label_Title, 1.0);
				LibManialink_PresetAnimInsert(Label_Title, DecaleTime, _Speed+300, "EaseLinear");
			}
		}
		
		Void SetNewMapPage()
		{
			declare Vec2[] Page_MenuButtons_ButtonPositions	for Page;
			declare CMlFrame ButtonsFrame <=> (Page.GetFirstChild("MenuButtons_ButtonsFrame")               as CMlFrame);
			
			for(I, 0, 1)
			{
				declare CMlFrame ButtonFrame  <=> (ButtonsFrame.GetFirstChild("MenuButtons_FrameInstance-"^I) as CMlFrame);
				foreach(I => Control in ButtonFrame.Controls)
				{
					LibManialink_SetTargetOpacity(Control, G_ControlOpacity[I]);
					LibManialink_PresetAnimInsert(Control, 0, 500, "EaseInSine");
				}
			}
		}

		Void SetMoodsPage()
		{

			declare Text[] Frame_Habillage = ["TargetMove_Line",
											"TargetMove_Angle",
										"TargetMove_Title"];
				
			declare Integer DecaleTime = 0;
			for(I, 0, Frame_Habillage.count-1)
			{

				declare CMlFrame MyFrame      <=> (Page.MainFrame.GetFirstChild(Frame_Habillage[I])	as CMlFrame);
				LibManialink_AnimStop(MyFrame);
				LibManialink_SetTargetPosition(MyFrame, <-60., MyFrame.RelativePosition.Y>);
				LibManialink_PresetAnimInsert(MyFrame, DecaleTime, 450 , "EaseInCubic");
				declare CMlQuad Quad_Line0 <=> (MyFrame.GetFirstChild("Quad_Line0")	as CMlQuad);
				declare CMlQuad Quad_Line1 <=> (MyFrame.GetFirstChild("Quad_Line1")	as CMlQuad);

				if(Quad_Line0 == Null ||Quad_Line1 == Null) continue;
				LibManialink_AnimStop(Quad_Line0);
				LibManialink_AnimStop(Quad_Line1);
				LibManialink_SetTargetOpacity(Quad_Line0, 0.0);
				LibManialink_PresetAnimInsert(Quad_Line0, DecaleTime, 300, "EaseLinear");
				LibManialink_SetTargetOpacity(Quad_Line1, 0.0);
				LibManialink_PresetAnimInsert(Quad_Line1, DecaleTime, 300, "EaseLinear");
				DecaleTime += 50;
			}

			declare CMlFrame ButtonsFrame <=> (Page.GetFirstChild("MenuButtons_ButtonsFrame")               as CMlFrame);
			declare Integer Decale = 150;
			for(I, 0, 1)
			{
				declare CMlFrame ButtonFrame  <=> (ButtonsFrame.GetFirstChild("MenuButtons_FrameInstance-"^I) as CMlFrame);
				foreach(Control in ButtonFrame.Controls)
				{
					LibManialink_SetTargetOpacity(Control, 0.);
					LibManialink_PresetAnimInsert(Control, Decale, 300, "EaseInSine");
				}
				Decale += 50;
			}
			declare CMlLabel Label_Title <=> (Page.MainFrame.GetFirstChild("Label_Title")	as CMlLabel);
			LibManialink_AnimStop(Label_Title);
			LibManialink_SetTargetOpacity(Label_Title, 0.0);
			LibManialink_PresetAnimInsert(Label_Title, DecaleTime, 300, "EaseLinear");
		}

		main() {
			Init();
			{{{MenuButtons::IncludeInMain()}}}
			while(True) {
				yield;
				if(! PageIsVisible) continue;
				LibManialink_AnimLoop();
				if(!G_IsMoodPage)
				{

					{{{MenuButtons::IncludeInWhile(False)}}}
				}

				
				if(G_HideTime < Now && G_HideTime != -1)
				{
					HidePage();
					G_HideTime = -1;
				}

				foreach(Event in PendingEvents) {
					switch(Event.Type) {
						case CMlEvent::Type::MenuNavigation: {
							switch(Event.MenuNavAction) {
								case CMlEvent::EMenuNavAction::Cancel : {
									SendCustomEvent("GotoPrevious", [""]);
								}
							}
						}
						case CMlEvent::Type::PluginCustomEvent: {
							switch(Event.CustomEventType) {
								case "Back" : {
									SendCustomEvent("GotoPrevious", [""]);
								}
								case "Show" : {
									declare PreviousPage = Event.CustomEventData[1];
									G_IsMoodPage = False;
									if(PreviousPage == "EditorMain" || PreviousPage == "BrowseTracks" || PreviousPage == "Enviro" || PreviousPage == "BrowseMods")
									{
										declare Vec2[] Page_MenuButtons_ButtonPositions	for Page;
										declare Real[] PosX;
										for(I, 0, Page_MenuButtons_ButtonPositions.count-1)
										{
											PosX.add(Page_MenuButtons_ButtonPositions[I].X+20.);
										}
										SetMenuPosX(PosX);
										LaunchTransition(True, 0., 200, True);
										LaunchTransitionHabillage(0., 0, 350, True);
									}
									else if(PreviousPage == "Moods" || PreviousPage == "Fields")
									{
										declare PosX = [-180.,0.];
										SetMenuPosX(PosX);
										
										SetNewMapPage();
										LaunchTransition(True, 0., 0);
										LaunchTransitionHabillage(0., 0, 350, True);
										

										declare CMlFrame MyFrame   <=> (Page.MainFrame.GetFirstChild("TargetMove_Line")	as CMlFrame);
										declare CMlQuad Quad_Line0 <=> (MyFrame.GetFirstChild("Quad_Line0")	as CMlQuad);
										Quad_Line0.Size.X = 0.;
										LibManialink_SetTargetSize(Quad_Line0, <158.3, Quad_Line0.Size.Y>);
										LibManialink_PresetAnimInsert(Quad_Line0, 50, 350, "EaseOutQuad");
									}
									else                                   LaunchTransition(True, 0., 200);
									ShowPage();
								}
								case "Hide" : {
									declare NextPage = Event.CustomEventData[1];
									if(NextPage == "EditorMain" || NextPage == "BrowseTracks" || NextPage == "Enviro" || NextPage == "SectionsSelector")
									{
										LaunchTransitionHabillage(35., 350, 500, False);
										HidePage();
									}
									else
									{
										SetMoodsPage();
										HideMenu();
									}
								}
								case "GoToMoods" : {
									//SetMoodsPage();
								}
								case "GoToNewMap" : {

								}
							}
						}
					}
				}
			}
		}
	--></script>
</manialink>
	""";
	
	return MLText;
}