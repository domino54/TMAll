#Include "Libs/Nadeo/Common/ManialinkTools/Manialink3WPrevAnims.Script.txt"			as Manialink
#Include "Libs/Nadeo/MP4/TPLagoon/LibButton_Img.Script.txt"			as LibButton_Img
#Include "Libs/Nadeo/MP4/Common/Colors.Script.txt"					as Colors
#Include "Libs/Nadeo/MP4/Common/ManialinkTools/FontManager.Script.txt" 			as Font

#Const C_ImgBase		"file://Media/MEDIABROWSER_HiddenResources/Common/Images/Menus/Buttons/"
#Const C_VideoDefault	"file://Media/Video/TPLagoon/LagoonAmbiance1.webm"
#Const C_ImgMedal		"file://Media/MEDIABROWSER_HiddenResources/Common/Images/Menus/Buttons/Medal-picto.dds"
#Const C_ImgMedalEmpty	"file://Media/MEDIABROWSER_HiddenResources/Common/Images/Menus/Buttons/Medal-picto-empty.dds"
#Const C_ImgOnline		"file://Media/MEDIABROWSER_HiddenResources/Common/Images/Menus/Buttons/Logo_Echelon.dds"
 
Text Build() {

	declare Integer Count_InstancesY         = 1;
	declare Integer Count_InstancesX         = 6;
	declare Real	SizeXQuad                = 4.4;
	declare Real	SizeYQuad                = 4.4;
	declare Real	MarginY_Button           = 4.0;
	declare Real	MarginX_Button           = 0.5;
	declare Real	SizeXQuadIcon            = 15.;
	declare Real	SizeYQuadIcon            = 15.;

	declare Text ImgLogo for LocalUser;
	declare Text IMGGlobal_Home = C_ImgBase ^ "Global_Home.dds";
	declare Text IMGGlobal_Back = C_ImgBase ^ "Global_Back.dds";
	declare Text IMGEchelonBase = "file://Media/Manialinks/Common/Echelons/";

	declare Text	MainFont	= Font::GetFontName("Main");
	declare Text	SubFont		= Font::GetFontName("SubTitle");
	declare Text MLText = """
<manialink version="3" name="L_GlobalButtons">
	<frame id="Frame_All" z-index="30" hidden="0">


		<frame pos="-60.0 63.6" hidden="1">
			<quad halign="left" valign="center" size="11 0.2" pos="0 -5.17" opacity="1." bgcolor="fff"/>
			<quad halign="left" valign="center" size="1  0.4" pos="0 -5.07" opacity="1." bgcolor="fff"/>
		</frame>

		<frame pos="-132 77">
			<quad id="Quad_Lagoon" halign="left" valign="top" size="75. 20."  pos="-21 9" z-index="2" image="{{{ImgLogo}}}" keepratio="Fit" opacity="1."/>
			<quad id="Quad_SectionLogo" halign="center" valign="center" size="14 14" keepratio="fit" pos="72 -5" z-index="3" opacity="1.0"/>
			<label id="Label_Echelon"   halign="center" valign="center" size="14"  pos="72 -5" z-index="4" text="" textfont="{{{MainFont}}}" textsize="9" />
		</frame>

		<frame id="Frame_Home" pos="-110 59.8" hidden="1">
			<frame id="Frame_HomeLibButton">
				<quad id="Quad_Home" halign="center" valign="center" size="22 5.2"  pos="12 0" opacity="0." bgcolor="000" scriptevents="1"/>
				<quad id="Quad_HomeIcon" halign="center" valign="center" size="{{{SizeXQuad}}} {{{SizeYQuad}}}"  pos="0 0" opacity="1." image="{{{IMGGlobal_Home}}}"/>
				<label id="Label_Home" halign="left"   valign="center" text="{{{_("Home")}}}" textfont="{{{SubFont}}}" textprefix="$t" pos="9 0" z-index="2" textsize="2" textcolor="fff" opacity="1." textemboss="1"/>

				<quad halign="right" valign="center" size="28 0.2" pos="25.6 -5.2" opacity="0.7" bgcolor="fff"/>
				<quad halign="right" valign="center" size="2  0.4"  pos="25.6 -5" opacity="0.7" bgcolor="fff"/>
			</frame>
		</frame>

		<frame id="Frame_Back" pos="-140.9 59.8" hidden="1">
			<quad id="Quad_Back" halign="center" valign="center" size="22 5.2"  pos="12 0" opacity="0." bgcolor="000" scriptevents="1"/>
			<quad id="Button_Cancel" halign="center" valign="center" size="{{{SizeXQuad+3.}}} {{{SizeYQuad+3.}}}" z-index="1" opacity="1.0" keepratio="Fit" />
			<quad id="Quad_BackIcon" halign="center" valign="center" size="{{{SizeXQuad}}} {{{SizeYQuad}}}" image="{{{IMGGlobal_Back}}}"/>
			<label id="Label_Back" halign="left"   valign="center" text="{{{_("Back")}}}" textfont="{{{SubFont}}}" textprefix="$t" pos="9 0" z-index="2" textsize="2" textcolor="fff" opacity="1." textemboss="1"/>

			<quad halign="center" valign="center" size="26 0.2" pos="10.1 -5.2" opacity="0.7" bgcolor="fff"/>
			<quad halign="center" valign="center" size="3 0.4"  pos="21.6 -5" opacity="0.7" bgcolor="fff"/>

			<quad halign="center" valign="center" size="{{{SizeXQuadIcon}}} {{{SizeYQuadIcon}}}" z-index="1" opacity="0." bgcolor="000" style="Icons128x128_1" substyle="Back"/>
		</frame>
	</frame>

	<script><!--
		#Include "TextLib" as TextLib

		#Const C_ColorMedals			["Author" => {{{Colors::GetColor("GreenMaster")}}} , "Gold" =>  {{{Colors::GetColor("GoldShiny")}}} , "Silver" =>  {{{Colors::GetColor("SilverShiny")}}},
										"Bronze" =>  {{{Colors::GetColor("BronzeShiny")}}} , "NoMedal" => <0., 0., 0.>, "" => <1., 1., 1.>]
		{{{Manialink::GetIncludes()}}}
		{{{LibButton_Img::IncludeInDeclare()}}}

		declare Text			G_LogoUrl;
		declare Text			G_DisplayType;

		{{{Manialink::Load()}}}

	Text GetMultiplayerEchelon() {
		switch(LocalUser.Echelon)
		{
			case CUser::EEchelon::None:    return "0";
			case CUser::EEchelon::Bronze1: return "1";
			case CUser::EEchelon::Bronze2: return "2";
			case CUser::EEchelon::Bronze3: return "3";
			case CUser::EEchelon::Silver1: return "4";
			case CUser::EEchelon::Silver2: return "5";
			case CUser::EEchelon::Silver3: return "6";
			case CUser::EEchelon::Gold1:   return "7";
			case CUser::EEchelon::Gold2:   return "8";
			case CUser::EEchelon::Gold3:   return "9";
		}
		return "0";
	}

		Void SetDisplayType(Text _DisplayType)
		{
			G_DisplayType = _DisplayType;
			declare Text[Text]		Ranking_ZoneScores		for Page;
			declare Text			Ranking_PromotionMedal	for Page;
			declare CMlQuad			Quad_SectionLogo	<=> (Page.GetFirstChild("Quad_SectionLogo")		as CMlQuad);
			declare CMlLabel		Label_Echelon		<=> (Page.GetFirstChild("Label_Echelon")		as CMlLabel);
			Label_Echelon.SetText("");
			if (_DisplayType == "Solo") {
				if(Ranking_PromotionMedal != "NoMedal")
				{
					Quad_SectionLogo.ChangeImageUrl({{{dump(C_ImgMedal)}}});
					Quad_SectionLogo.Colorize = C_ColorMedals[Ranking_PromotionMedal];
					Quad_SectionLogo.Opacity	= 1.;
				} else {
					Quad_SectionLogo.ChangeImageUrl({{{dump(C_ImgMedalEmpty)}}});
					Quad_SectionLogo.Colorize = C_ColorMedals[Ranking_PromotionMedal];
					Quad_SectionLogo.Opacity	= 0.4;
				}
			} else if (_DisplayType == "Multiplayer") {
				declare Integer Echelon = TextLib::ToInteger(GetMultiplayerEchelon());
				//Echelon = 5;
				//Quad_SectionLogo.ChangeImageUrl("{{{IMGEchelonBase}}}"^Echelon^".dds");
				Quad_SectionLogo.ChangeImageUrl("{{{IMGEchelonBase}}}echelon"^Echelon^".dds");
				Quad_SectionLogo.ModulateColor = <1., 1., 1.>;
				Label_Echelon.SetText(""^Echelon);
			} else {
				Quad_SectionLogo.Colorize = <1., 1., 1.>;
			}
		}

		Void UpdateHome(Boolean _Visibility)
		{
			declare CMlFrame Frame_Home <=> (Page.MainFrame.GetFirstChild("Frame_Home")	as CMlFrame);
			Frame_Home.Visible = _Visibility;
		}

		Void UpdateBack(Boolean _Visibility)
		{
			declare CMlFrame Frame_Back <=> (Page.MainFrame.GetFirstChild("Frame_Back")	as CMlFrame);
			Frame_Back.Visible = _Visibility;
		}
		
		Void FocusButton(Text _Id)
		{
			declare Text LabelFocus;
			if(_Id == "Quad_Back")      LabelFocus = "Label_Back";
			else if(_Id == "Quad_Home") LabelFocus = "Label_Home";
			declare CMlLabel Label_Focus <=> (Page.MainFrame.GetFirstChild(LabelFocus)	as CMlLabel);
			Label_Focus.TextColor = <1., 1., 1.>;
			Label_Focus.Scale = 1.05;
		}

		Void UnFocusButton(Text _Id)
		{
			declare Text LabelFocus;
			if(_Id == "Quad_Back")      LabelFocus = "Label_Back";
			else if(_Id == "Quad_Home") LabelFocus = "Label_Home";
			declare CMlLabel Label_Focus <=> (Page.MainFrame.GetFirstChild(LabelFocus)	as CMlLabel);
			Label_Focus.TextColor = <0.95, 0.95, 0.95>;
			Label_Focus.Scale = 1.0;
		}

		Void Init()
		{
			G_LogoUrl = "";
		}

		main() {
			Init();
			SendCustomEvent("UpdateGlobalButtons", [""]);
			while(True) {
				
				yield;
				if (!PageIsVisible && PendingEvents.count == 0) continue;
				LibManialink_AnimLoop();
				{{{LibButton_Img::IncludeInWhile(["Button_Cancel"], ["Frame_HomeLibButton"])}}}
				
				foreach(Event in PendingEvents) {
					switch(Event.Type) {

						case CMlEvent::Type::MenuNavigation: {
							switch(Event.MenuNavAction) {
								case CMlEvent::EMenuNavAction::Select : {
								}
								case CMlEvent::EMenuNavAction::Cancel : {
								}
							}
						}
						case CMlEvent::Type::MouseClick: {
							if (Event.ControlId == "Quad_Home")
							{
								SendCustomEvent("GotoHome", [""]);
							}
							else if (Event.ControlId == "Quad_Back")
							{

								SendCustomEvent("GlobalB_Back", [""]);
							}
						}
						case CMlEvent::Type::MouseOver: {
							Audio.PlaySoundEvent(CAudioManager::ELibSound::Focus, 1, 0.0);
							FocusButton(Event.ControlId);
						}
						case CMlEvent::Type::MouseOut: {
							UnFocusButton(Event.ControlId);
						}
						case CMlEvent::Type::PluginCustomEvent: {
							
							switch(Event.CustomEventType) {
								case "Show" : {
									{{{LibButton_Img::IncludeInShow()}}}
								}
								case "Hide" : {
								}
								case "UpdateHome" : {
									declare Boolean Visibility = (Event.CustomEventData[0] == "True");
									UpdateHome(Visibility);
								}
								case "UpdateBack" : {
									declare Boolean Visibility = (Event.CustomEventData[0] == "True");
									UpdateBack(Visibility);
								}
								case "UpdateUI" : {
									declare Text LogoPath = Event.CustomEventData[0];
									declare Text DisplayType = Event.CustomEventData[1];
									declare CMlQuad		Quad_SectionLogo	<=> (Page.GetFirstChild("Quad_SectionLogo")		as CMlQuad);
									if (G_LogoUrl != LogoPath) {
										G_LogoUrl = LogoPath;
										Quad_SectionLogo.ChangeImageUrl(LogoPath);
										Quad_SectionLogo.Opacity   = 0.;
										Quad_SectionLogo.Style = "";
										Quad_SectionLogo.Substyle = "";
										declare Real TargetOpacity = 1.0;
										if(DisplayType == "Solo") {
											declare Text Ranking_PromotionMedal for Page;
											if (Ranking_PromotionMedal == "NoMedal") {
												TargetOpacity = 0.4;
											}
										}
										LibManialink_SetTargetOpacity(Quad_SectionLogo, TargetOpacity);
										LibManialink_PresetAnim(Quad_SectionLogo, 500, "EaseOutCubic");
									}
									SetDisplayType(DisplayType);
								}
							}
						}
					}
				}
			}
		}
	--></script>
</manialink>
	""";
	
	return MLText;
}