#Include "Libs/Nadeo/Common/FormDisplayer.Script.txt"	as FormDisplayer
#Include "TextLib"										as TextLib

#Const C_SettingsTypes		["Entry",	"Comment",	"Integer",  "Password", "Password",	"ButtonSwitch",
							"Password", "Integer",	"Password",	"Integer",	"Integer",	"Entry",	"Switch",
							"Integer",	"Switch",	"Integer",	"Integer",	"Integer",	"Switch",	"Password", "Entry"]
//#Const C_SettingsNames		["GAME NAME",	"COMMENT",	"MAX PLAYERS",	"GAME MODE",	"POINT LIMIT",	"Advanced",
//							"PASSWORD (optional)", "MAX SPECTATORS", "PASSWORD SPECTATOR (OPT.)", "LADDER LIMIT MIN", "LADDER LIMIT MAX", "LADDER MODE", "USER ALTERNATE RULES",
//							"WARM-UP PHASE DURATION", "ALLOW MAP DOWNLOAD", "CALLVOTE THRESHOLD(%)", "CALLVOTE TIMEOUT", "CHAT TIME", "ACCEPT REFEREES"]

#Const C_SettingsNames		[_("Game name :"),			_("Comment :"),			_("Max players :"),				_("Password (optional) :"),	_("Password spectator (opt.) :"),		_("Advanced :"),
							_("Password (optional) :"),	_("Max spectators :"),	_("Password spectator (opt.) :"),	_("Ladder Limit Min :"),	_("Ladder Limit Max :"),	_("Ladder mode :"),		 _("Use alternate rules :"),
							_("Warm-up phase duration :"),_("Allow map download :"),_("Callvote threshold (%) :"),		_("Callvote timeout :"),	_("Chat time :"),			_("Accept referees :"),	_("Password referee :"), _("Players to validate :")]

Text Build() {
	//L16N |Infinitive| In a popup, a button to make a new server/new game room
	declare CreateText = _("Create");
	FormDisplayer::Init(//L16N |Infinitive| Title of the form, to make a new game room for players to join
		_("Create a server"),
		CreateText, "Multiplayer_CreateServer", C_SettingsTypes, C_SettingsNames, <-54.7,8.>, <216.7, 123.3>);
	FormDisplayer::SetHideSettings([5=>5, 6=>5, 7=>5, 8=>5, 9=>5, 10=>5, 11=>5, 12=>5, 13=>5, 14=>5, 15=>5, 16=>5, 17=>5, 18=>5, 19=>18, 20=>18]); //Hack - Le 5 se cache lui mÃªme
	FormDisplayer::SetSecondColumnStart(9);
	FormDisplayer::SetIndexWhichOpenList([5]);
	FormDisplayer::SetDefault([0=> LocalUser.Login, 2 => "16"]);
	//FormDisplayer::SetAdvancedList(C_Settings_Adv_Types, C_Settings_Adv_Names,  <-68.7,-2.>);

	declare Text MLText = """
<manialink version="3" name="L_Multiplayer_Create">
{{{FormDisplayer::ManialinkFrameModels()}}}

	<frame id="Frame_All">
{{{FormDisplayer::ManialinkMainBody()}}}
	</frame>

	<script><!--
{{{FormDisplayer::Includes()}}}
{{{FormDisplayer::Declares()}}}

	Void ShowPage()
	{
		EnableMenuNavigation(True,False,Null,1);
		FormDisplayer_Show();
	}

	Void Init()
	{
	}

	main() {
		Init();
		FormDisplayer_Init();
		ShowPage();
		while(True) {

			yield;
			if(! PageIsVisible) continue;
			FormDisplayer_Loop();

			foreach(Event in PendingEvents) {
				switch(Event.Type) {
					case CMlEvent::Type::MenuNavigation: {
						switch(Event.MenuNavAction) {
							case CMlEvent::EMenuNavAction::Cancel : {
								SendCustomEvent("GotoPrevious", [""]);
							}
						}
					}
					case CMlEvent::Type::PluginCustomEvent: {
						switch(Event.CustomEventType) {
							case "Show" : {
								ShowPage();
								SendCustomEvent("UpdateBarreSection", ["Multiplayer_Create"]);
							}
							case "Hide" : {
								EnableMenuNavigation(True,False,Null,0);
								SendCustomEvent("DetachPage", ["Multiplayer_Create"]);
							}
							case "Back" : {
								SendCustomEvent("GotoPrevious", [""]);
							}
						}
					}
				}
			}
		}
	}
	--></script>
</manialink>	""";
	
	return MLText;
}