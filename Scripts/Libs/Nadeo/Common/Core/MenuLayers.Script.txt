#Const Version		"2014-07-28"
#Const ScriptName	"MenuLayers.Script.txt"

// ---------------------------------- //
// Globales
// ---------------------------------- //
declare Ident[Text]			G_Layers;		///< Stock the registred layers ["LayerName" => #LayerId]

Text GetScriptVersion() {return Version;}
Text GetScriptName() {return ScriptName;}

Text GetName(CUILayer _Layer) {
	if(_Layer == Null || _Layer.LocalPage == Null) return "";
	declare Text Page_LayerName for _Layer.LocalPage;
	return Page_LayerName;
}

Boolean Exists(Text _LayerName) {
	if (!G_Layers.existskey(_LayerName)) return False;
	if (!UILayers.existskey(G_Layers[_LayerName])) return False;
	return True;
}

CUILayer Get(Text _LayerName) {
	if (!G_Layers.existskey(_LayerName)) return Null;
	
	declare Ident LayerId = G_Layers[_LayerName];
	if (!UILayers.existskey(LayerId)) return Null;
	
	return UILayers[LayerId];
}

Boolean IsLayerVisible(Text _LayerName) {
	declare CUILayer Layer <=> Get(_LayerName);
	if(Layer == Null) return False;
	// if(UILayers.exists(Layer)) UILayers.remove(Layer);
	return Layer.IsVisible;
}

Void Attach(Text _LayerName) {
	declare CUILayer Layer <=> Get(_LayerName);
	if(Layer == Null) return;
	// if(!UILayers.exists(Layer)) UILayers.add(Layer);
	Layer.IsVisible = True;
}

Void Detach(Text _LayerName) {
	declare CUILayer Layer <=> Get(_LayerName);
	if(Layer == Null) return;
	// if(UILayers.exists(Layer)) UILayers.remove(Layer);
	Layer.IsVisible = False;

}

Void Create(Text _LayerName, Text _ManialinkPage) {
	declare CUILayer NewLayer <=> Get(_LayerName);
	if(NewLayer == Null) {
		NewLayer = UILayerCreate();
	}
	G_Layers[_LayerName] = NewLayer.Id;
	
	NewLayer.ManialinkPage = _ManialinkPage;
	Detach(_LayerName);
}
Void Create(Text _LayerName) {
	Create(_LayerName, "");
}

Void Update(Text _LayerName, Text _ManialinkPage) {
	declare CUILayer TheLayer <=> Get(_LayerName);
	if(TheLayer == Null) return;
	
	TheLayer.ManialinkPage = _ManialinkPage;
}

Void Destroy(Text _LayerName) {
	declare CUILayer Layer = Get(_LayerName);
	//log("Layer: " ^ Layer);
	if(Layer != Null) {
		UILayerDestroy(Layer);
	}
	declare Boolean Removed = G_Layers.removekey(_LayerName);
}

// ---------------------------------- //
/** Set the type of a layer
 *
 *	@param	_LayerName		The name of the layer
 *	@param	_LayerType		The type of layer to set
 */
Void SetType(Text _LayerName, CUILayer::EUILayerType _LayerType) {
	declare Layer <=> Get(_LayerName);
	if (Layer == Null) return;
	
	Layer.Type = _LayerType;
}

// ---------------------------------- //
/** Set the Animation type of a layer (IN OUT ANIMATION)
 *
 *	@param	_LayerName		The name of the layer
 *	@param	_LayerType		The type of Animation to set
 */
Void SetAnimationType(Text _LayerName, CUILayer::EUILayerAnimation _LayerAnimation) {
	declare Layer <=> Get(_LayerName);
	if (Layer == Null) return;
	
	Layer.InOutAnimation = _LayerAnimation;
}

Void SetAnimationTypeOut(Text _LayerName, CUILayer::EUILayerAnimation _LayerAnimation) {
	declare Layer <=> Get(_LayerName);
	if (Layer == Null) return;
	
	Layer.OutAnimation = _LayerAnimation;
}

Void SetAnimationTypeIn(Text _LayerName, CUILayer::EUILayerAnimation _LayerAnimation) {
	declare Layer <=> Get(_LayerName);
	if (Layer == Null) return;
	
	Layer.InAnimation = _LayerAnimation;
}

// ---------------------------------- //
/** Set the layer visibility
 *
 *	@param	_LayerName		The name of the layer to update
 *	@param	_IsVisible		True if the layer must be visible, false otherwise
 */
Void SetVisibility(Text _LayerName, Boolean _IsVisible) {
	declare Layer <=> Get(_LayerName);
	if (Layer == Null) return;
	
	Layer.IsVisible = _IsVisible;
}

Void Clear() {
	UILayerDestroyAll();
	G_Layers.clear();
}

Void Unload() {
	Clear();
}

Void Load() {
	Unload();
}