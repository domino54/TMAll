declare Text[] Sections_Name; 
declare Text[] Sections_FirstPage; 
declare Text[] Sections_QuadSubstyle; 
declare Vec3[] Sections_Color; 
declare Text ActualSection; 



Void AddSection(Text _Name, Text _FirstPage, Text _Substyle, Vec3 _Color) {
	Sections_Name.add(_Name);
	Sections_FirstPage.add(_FirstPage);
	Sections_QuadSubstyle.add(_Substyle);
	Sections_Color.add(_Color);
}

Void AddSection(Text _Name, Text _FirstPage) {
	AddSection(_Name, _FirstPage, "", <0.,0.,0.>);
}

Text GetActualSection()	
{
	return ActualSection;
}

Text[] GetSections_Name() {
	return Sections_Name;
}

Text[] GetSections_FirstPage() {
	return Sections_FirstPage;
}

Text[] GetSections_QuadSubstyle() {
	return Sections_QuadSubstyle;
}

Vec3[] GetSections_Color() {
	return Sections_Color;
}


Text GetSection_NameById(Integer _Id) {	
	return Sections_Name[_Id];
}

Text GetSection_FirstPageById(Integer _Id) {
	return Sections_FirstPage[_Id];
}

Vec3 GetSection_Color(Integer _Id) {
	if(!Sections_Color.existskey(_Id)) return <1., 1., 1.>;
	return Sections_Color[_Id];
}

Vec3 GetSection_Color() {
	declare Integer IdInt = Sections_Name.keyof(GetActualSection());
	return GetSection_Color(IdInt);
}

Void SetActualSection(Integer _Id)
{
	ActualSection = Sections_Name[_Id];
}

Void SetActualSection(Text _SectionName)
{
	ActualSection = _SectionName;
}
