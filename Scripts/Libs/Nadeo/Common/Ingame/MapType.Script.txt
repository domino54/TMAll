/** 
 *	MapType library
 */

#Const Version		"2016-01-13"
#Const ScriptName	"MapType.Script.txt"

// ---------------------------------- //
// Functions
// ---------------------------------- //
// ---------------------------------- //
// Public
// ---------------------------------- //

// ---------------------------------- //
/** Return the version number of the script
 *
 *	@return		The version number of the script
 */
Text GetScriptVersion() {
	return Version;
}

// ---------------------------------- //
/** Return the name of the script
 *
 *	@return		The name of the script
 */
Text GetScriptName() {
	return ScriptName;
}

// ---------------------------------- //
/** Start map test
 *
 *	@param	_NbPlayers		Number of players testing
 */
Void EnterPlayground(Integer _NbPlayers) {
	assert(_NbPlayers == 1);
	if (!IsSwitchedToPlayground) {
		RequestEnterPlayground();
	}
	wait(IsSwitchedToPlayground);
	wait(Mode != Null && Mode.AllPlayers.count >= 1);
	assert(Mode.AllPlayers.count == _NbPlayers);
}

// ---------------------------------- //
/// Stop map test
Void LeavePlayground() {
	if (IsSwitchedToPlayground) {
		RequestLeavePlayground();
	}
	wait(!IsSwitchedToPlayground);
}


// ---------------------------------- //
/** Set the time objectives of a map based on the author time
 *
 *	@param	_AuthorTime		The time of the author of the map
 */
Void SetObjectivesFromAuthorTime(Integer _AuthorTime) {
	Map.TMObjective_AuthorTime = _AuthorTime;
	
}

// ---------------------------------- //
/** Set the time objectives of a map based on the author score
 *
 *	@param	_AuthorTime		The score of the author of the map
 */
Void SetObjectivesFromAuthorScore(CTmScore _Score) {
	TMObjective_SetFromBestRace(_Score);
}

// ---------------------------------- //
// Reset the objectives of the map
Void ResetObjectives() {
	Map.TMObjective_AuthorTime = -1;
	Map.TMObjective_BronzeTime = -1;
	Map.TMObjective_SilverTime = -1;
	Map.TMObjective_GoldTime = -1;
}

// ---------------------------------- //
/** Check if the objectives times are valid
 *
 *	For the time being this function shoud always return True
 *	because the values set in the TMObjectives variables
 *	are automatically checked by the game and sanitized
 *	when necessary.
 *
 *	@return		True if the objectives are valid, false otherwise
 */
Boolean ObjectivesAreValid() {
	if (
		Map.TMObjective_BronzeTime <= 0
		|| Map.TMObjective_SilverTime > Map.TMObjective_BronzeTime
		|| Map.TMObjective_GoldTime > Map.TMObjective_SilverTime
		|| Map.TMObjective_AuthorTime > Map.TMObjective_GoldTime
	) {
		return False;
	}
	
	return True;
}