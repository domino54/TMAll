/**
 * Communique avec la ManiaApp et le module UI de Global Ranking
 **/


Void LoadGlobalRanking(CTmPlayer _Player, Integer _Index) {
	declare UI <=> UIManager.GetUI(_Player);
	declare netwrite Integer Net_GameContext for UI;
	Net_GameContext = _Index;
}

// Void UpdateGlobalRanking(CTmPlayer _Player) {
	// declare UI <=> UIManager.GetUI(_Player);
	// declare netwrite Integer Net_RankingUpdate for UI;
	// Net_RankingUpdate += 1;
// }
 
 /*
Void ShowGlobalRanking(CTmPlayer _Player) {
	declare UI <=> UIManager.GetUI(_Player);
	declare netwrite Integer Net_ShowGRUpdate for UI;
	Net_ShowGRUpdate += 1;
}

Void HideGlobalRanking(CTmPlayer _Player) {
	declare UI <=> UIManager.GetUI(_Player);
	declare netwrite Integer Net_HideGRUpdate for UI;
	Net_HideGRUpdate += 1;
}
*/

/*
Void AskGlobalRankingDifferent() {
	declare UI <=> UIManager.GetUI(_Player);
	declare netwrite Integer Net_AskIsDisplayDifferent for UI;	
}
*/

Void SetRankingSequence(CTmPlayer _Player, Integer _Sequence) {
	declare UI <=> UIManager.GetUI(_Player);
	declare netwrite Integer Net_RankingSequenceType for UI;
	Net_RankingSequenceType = _Sequence;
} 

Void ForceDisplayLastRanking(CTmPlayer _Player) {
	declare UI <=> UIManager.GetUI(_Player);
	declare netwrite Integer Net_ForceDisplayLastRankingUpdate for UI;
	Net_ForceDisplayLastRankingUpdate += 1;
}

Void StartRankingSequence(CTmPlayer _Player) {
	declare UI <=> UIManager.GetUI(_Player);
	declare netwrite Integer Net_StartRankingSequenceUpdate for UI;
	Net_StartRankingSequenceUpdate += 1;
}

Void StopRankingSequence(CTmPlayer _Player) {
	declare UI <=> UIManager.GetUI(_Player);
	declare netwrite Integer Net_StopRankingSequenceUpdate for UI;
	Net_StopRankingSequenceUpdate += 1;
}

Boolean HasNewEchelon(CTmPlayer _Player) {
	declare UI <=> UIManager.GetUI(_Player);
	declare netread Integer Net_HasNewEchelonUpdate for UI;
	declare			Integer Pre_HasNewEchelonUpdate for UI;
	if(Pre_HasNewEchelonUpdate != Net_HasNewEchelonUpdate) {
		Pre_HasNewEchelonUpdate = Net_HasNewEchelonUpdate;
		return True;
	}
	return False;
}

Integer GetPlayerEchelon(CTmPlayer _Player) {
	declare UI <=> UIManager.GetUI(_Player);
	declare netread Integer Net_PlayerEchelon for UI;
	return Net_PlayerEchelon;
}