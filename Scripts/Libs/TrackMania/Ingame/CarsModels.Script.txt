/** 
 *	TM library
 */

#Const Version		"2015-03-02"
#Const ScriptName	"CarModels.Script.txt"

#Const C_SoloCarModel 			"DefaultPlayerModel"
#Const C_DDriverCanyonCarModel 	"Vehicles\\CanyonCarCEDD.Item.gbx"
#Const C_DDriverValleyCarModel 	"Vehicles\\ValleyCarCEDD.Item.gbx"
#Const C_DDriverLagoonCarModel 	"Vehicles\\LagoonCarCEDD.Item.gbx"
#Const C_DDriverStadiumCarModel "Vehicles\\StadiumCarCEDD.Item.gbx"

#Include "MathLib" as ML
#Include "Libs/Nadeo/Common/Core/Logger.Script.txt" as Logger

Void StartItemList() {
	ItemList_Begin();
}

Void EndItemList() {
	ItemList_End();
}

// /////////////
// MEDALS
// 
// MBronze.zip
// MSilver.zip
// MGold.zip
// MTrackmaster.zip

// /////////////
// DOUBLE DRIVER
// Skins\Models\CanyonCarCEDD
// pour le moment il n'y a que Default.zip
// ItemList_AddWithSkin(C_SoloCarModel, "Skins\\Models\\StadiumCarCE\\DDRed.zip")
// faudra faire
// ItemList_AddWithSkin("Vehicles\\StadiumCarCEDD.Item.gbx", "Skins\\Models\\StadiumCarCE\\HSRed.zip")

Text[] RandomizeSkins(Text[] _Skins) {
	declare Text Temp = "";
	declare RandIndex = 0;
	declare Text[] RandomizedSkins = _Skins;
	for(I, 0, RandomizedSkins.count-2) {	
		RandIndex = ML::Rand(I+1, RandomizedSkins.count-1);
		Temp = RandomizedSkins[I];
		RandomizedSkins[I] = RandomizedSkins[RandIndex];
		RandomizedSkins[RandIndex] = Temp;
	}
	return RandomizedSkins;
}

Text[] GetRandomizedArcadeSkin(Text _EnviroName) {
	declare Text[] CarsSkin;
	if(_EnviroName == "Stadium") {
		CarsSkin.add("IntALG.zip");
		CarsSkin.add("IntAUS.zip");
		CarsSkin.add("IntBRA.zip");
		CarsSkin.add("IntCAN.zip");
		CarsSkin.add("IntCHN.zip");
		CarsSkin.add("IntFRA.zip");
		CarsSkin.add("IntGBR.zip");
		CarsSkin.add("IntGER.zip");
		CarsSkin.add("IntIND.zip");
		CarsSkin.add("IntMEX.zip");
		CarsSkin.add("IntNED.zip");
		CarsSkin.add("IntNZL.zip");
		CarsSkin.add("IntPRK.zip");
		CarsSkin.add("IntROM.zip");
		CarsSkin.add("IntRUS.zip");
		CarsSkin.add("IntTHA.zip");
		CarsSkin.add("IntUSA.zip");
		CarsSkin.add("IntUZB.zip");
		
		CarsSkin = RandomizeSkins(CarsSkin);
	} else {
		CarsSkin.add("Arcade01.zip");
		CarsSkin.add("Arcade02.zip");
		CarsSkin.add("Arcade03.zip");
		CarsSkin.add("Arcade04.zip");
		CarsSkin.add("Arcade05.zip");
		CarsSkin.add("Arcade06.zip");
		CarsSkin.add("Arcade07.zip");
		CarsSkin.add("Arcade08.zip");
		CarsSkin.add("Arcade09.zip");
		CarsSkin.add("Arcade10.zip");
		
		CarsSkin = RandomizeSkins(CarsSkin);
	}
	
	// log(CarsSkin);
	
	return CarsSkin;
}

Ident[] LoadCarsModels(Text _EnviroName, Text _ModeName, Boolean _IsDoubleDriver) {

	declare Ident[] CarsModels;
	declare Text CarPath = "Skins\\Models\\"^_EnviroName^"CarCE\\";
	declare Text CarModel;
	
	if(_IsDoubleDriver) {
		switch (_EnviroName) {
			case "Canyon" : CarModel = C_DDriverCanyonCarModel;
			case "Valley" : CarModel = C_DDriverValleyCarModel;
			case "Lagoon" : CarModel = C_DDriverLagoonCarModel;
			case "Stadium" : CarModel = C_DDriverStadiumCarModel;
			default : {
				Logger::Warn("[LoadCarsModels] Unknown Enviro : "^_EnviroName^", could not load cars models.");
				return CarsModels;
			}
		}
	} else {
		CarModel = C_SoloCarModel;
	}
	
	// Logger::Log("Car model: "^CarModel);
	// Logger::Log("Car path: "^CarPath);
	
	/*
	switch(_ModeName) {
		case "Hotseat": {
			CarsModels = [
				ItemList_AddWithSkin(CarModel, CarPath^"HSBlue.zip"),
				ItemList_AddWithSkin(CarModel, CarPath^"HSRed.zip"),
				ItemList_AddWithSkin(CarModel, CarPath^"HSGreen.zip"),
				ItemList_AddWithSkin(CarModel, CarPath^"HSPurple.zip"),
				ItemList_AddWithSkin(CarModel, CarPath^"HSPink.zip"),
				ItemList_AddWithSkin(CarModel, CarPath^"HSCyan.zip"),
				ItemList_AddWithSkin(CarModel, CarPath^"HSBlack.zip"),
				ItemList_AddWithSkin(CarModel, CarPath^"HSWhite.zip")
			];
		}
		case "Splitscreen": {
			CarsModels = [
				ItemList_AddWithSkin(CarModel, CarPath^"SPLBlue.zip"),
				ItemList_AddWithSkin(CarModel, CarPath^"SPLRed.zip"),
				ItemList_AddWithSkin(CarModel, CarPath^"SPLGreen.zip"),
				ItemList_AddWithSkin(CarModel, CarPath^"SPLPurple.zip")
			];
		}
		case "Arcade": {
			declare Text[] CarsSkin = GetRandomizedArcadeSkin(_EnviroName);

			if(CarsSkin.count > 0) {
				CarsModels = [
					ItemList_AddWithSkin(CarModel, CarPath^CarsSkin[0]),
					ItemList_AddWithSkin(CarModel, CarPath^CarsSkin[1]),
					ItemList_AddWithSkin(CarModel, CarPath^CarsSkin[2]),
					ItemList_AddWithSkin(CarModel, CarPath^CarsSkin[3])
				];
			} else {
				//En urgence totale, on load les skins hotseat
				CarsModels = [
					ItemList_AddWithSkin(CarModel, CarPath^"HSRed.zip"),
					ItemList_AddWithSkin(CarModel, CarPath^"HSBlue.zip"),
					ItemList_AddWithSkin(CarModel, CarPath^"HSGreen.zip"),
					ItemList_AddWithSkin(CarModel, CarPath^"HSPurple.zip"),
					ItemList_AddWithSkin(CarModel, CarPath^"HSPink.zip"),
					ItemList_AddWithSkin(CarModel, CarPath^"HSCyan.zip"),
					ItemList_AddWithSkin(CarModel, CarPath^"HSBlack.zip"),
					ItemList_AddWithSkin(CarModel, CarPath^"HSWhite.zip")
				];
			}
		}
		case "CampaignDuo": {
			 CarsModels = [
				ItemList_AddWithSkin(CarModel, "Profile")
			];
		}
		default : {
			// HACK avant d'avoir les skins Gold, etc.
			// CarsModels = [
					// ItemList_AddWithSkin(CarModel, CarPath^"Arcade01.zip"),
					// ItemList_AddWithSkin(CarModel, CarPath^"Arcade02.zip"),
					// ItemList_AddWithSkin(CarModel, CarPath^"Arcade03.zip"),
					// ItemList_AddWithSkin(CarModel, CarPath^"Arcade04.zip")
				// ];
				
			declare Text[] CarsSkin = GetRandomizedArcadeSkin(_EnviroName);
			
			
			CarsModels = [
				ItemList_AddWithSkin(CarModel, CarPath^"MTrackmaster.zip"),
				ItemList_AddWithSkin(CarModel, CarPath^"MGold.zip"),
				ItemList_AddWithSkin(CarModel, CarPath^"MSilver.zip"),
				ItemList_AddWithSkin(CarModel, CarPath^"MBronze.zip"),
				ItemList_AddWithSkin(CarModel, CarPath^CarsSkin[0])
			];
		}
	}
	*/
	
	return CarsModels;
}

Ident[] LoadCarsModels(Text _EnviroName, Text _ModeName) {
	return LoadCarsModels(_EnviroName, _ModeName, False);
}