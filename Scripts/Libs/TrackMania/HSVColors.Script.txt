Text MLHSVColors() {
	declare Text MLText = """
	// <script><!-- // pour la colo syntaxique :)
	
		Vec3 ToHSV(Vec3 _RBGColor) {
			declare Real R = _RBGColor.X;
			declare Real G = _RBGColor.Y;
			declare Real B = _RBGColor.Z;
			
			if(R < 0.) R = 0.;
			if(G < 0.) G = 0.;
			if(B < 0.) B = 0.;
			if(R > 1.) R = 1.;
			if(G > 1.) G = 1.;
			if(B > 1.) B = 1.;
			
			declare Real CMax = R;
			if(G > R && G > B) CMax = G;
			if(B > R && B > G) CMax = B;
			
			declare Real CMin = R;
			if(G <= R && G <= B) CMin = G;
			if(B <= R && B <= G) CMin = B;
			
			declare Real Delta = CMax - CMin;
			declare Real H = 0.;
			if(Delta > 0.) {
				if(CMax == R) {
					if(G > B) 	H = 		1./6 * (G - B) /Delta;
					else 		H = 1 - 	(1./6 * (B - G) /Delta);
				} else if(CMax == G) {
					if(B > R)	H = 2./6. + (1./6. * (B - R))/Delta;
					else		H = 2./6. - (1./6. * (R - B))/Delta;
				} else {
					if(R > G)	H = 4./6. + (1./6. * (R - G))/Delta;
					else		H = 4./6. - (1./6. * (G - R))/Delta;
				}
			}
			
			declare Real S = 0.;
			if(CMax > 0.) S = Delta / CMax;
			
			declare V = CMax;
			return <H, S, V>;
		}
		
		Vec3 ToRGB(Vec3 _HSVColor) {
			declare Real H = 360. * _HSVColor.X;
			declare Real S = _HSVColor.Y;
			declare Real V = _HSVColor.Z;
			
			if(H < 0.) H = 0.;
			if(S < 0.) S = 0.;
			if(V < 0.) V = 0.;
			if(H > 360.) H = 360.;
			if(S > 1.) S = 1.;
			if(V > 1.) V = 1.;
			
			declare Real C = S * V;
			
			declare Integer IH = ML::NearestInteger(H);
			
			declare Real IHSixty = 1. * (IH/60);
			
			declare Real HueModule = (H/60.) - IHSixty;
			if((IH % 120) >= 60) {
				HueModule = 1 - HueModule;
			}
			
			
			declare Real X = C * HueModule;
			declare Real m = V - C;
			
			if(C < 0.) C = 0.;
			if(X < 0.) X = 0.;
			if(C > 1.) C = 1.;
			if(X > 1.) X = 1.;
			
			declare Vec3 RGBPrime;
			if(H >= 0 && H < 60) 			RGBPrime = <C, X, 0.>;
			else if(H >= 60 && H < 120) 	RGBPrime = <X, C, 0.>;
			else if(H >= 120 && H < 180) 	RGBPrime = <0., C, X>;
			else if(H >= 180 && H < 240) 	RGBPrime = <0., X, C>;
			else if(H >= 240 && H < 300) 	RGBPrime = <X, 0., C>;
			else 							RGBPrime = <C, 0., X>;

			
			declare Vec3 RGB = <RGBPrime.X + m, RGBPrime.Y + m, RGBPrime.Z + m>;
			return RGB;
		}
	""";
	
	return MLText;
}