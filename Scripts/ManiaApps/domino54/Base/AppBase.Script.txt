/**
 * @name AppBase.Script.txt
 * @author domino54
 * @version 2024-10-05
 *
 * Base for a standard ManiaApp.
 * Based on Nadeo's standard AppBase.Script.txt without #RequireContext.
 */

#Const AB_Version     "2023-10-05"
#Const AB_ScriptName  "ManiaApps/domino54/AppBase.Script.txt"

#Include "Libs/Nadeo/Env.Script.txt" as Env
#Include "Libs/Nadeo/Log.Script.txt" as Log
#Include "Libs/domino54/HttpClient.Script.txt" as HttpClient
#Include "ManiaApps/Nadeo/Layers.Script.txt" as Layers

// ---------------------------------- //
// Settings
// ---------------------------------- //

/// Environment in which the script runs
#Setting S_ScriptEnvironment "production" as "<hidden>"

// ---------------------------------- //
// Extends
// ---------------------------------- //

***AB_LogVersions***
***
Log::RegisterScript(AB_ScriptName, AB_Version);
Log::RegisterScript(Env::ScriptName, Env::Version);
Log::RegisterScript(Log::ScriptName, Log::Version);
Log::RegisterScript(Layers::ScriptName, Layers::Version);
Log::RegisterScript(HttpClient::ScriptName, HttpClient::Version);
***

***AB_LoadLibraries***
***
// Must be loaded before other libraries
Env::Load();
Env::Set(S_ScriptEnvironment);
Log::Load();
Layers::Load();
HttpClient::Load();
***

***AB_Yield***
***
HttpClient::Yield();
***

***AB_UnloadLibraries***
***
Layers::Unload();
Log::Unload();
Env::Unload();
HttpClient::Unload();
***

// ---------------------------------- //
// Functions
// ---------------------------------- //

// ---------------------------------- //
// Public
// ---------------------------------- //

/**
 * yield; the script.
 * This should be the only place in the complete ManiaApp where the script yields.
 */
Void AB_Yield() {
  yield;
  +++AB_Yield+++
}

// ---------------------------------- //
// Main
// ---------------------------------- //
main() {
  LayersDefaultManialinkVersion = 3;
  EnableMenuNavigationInputs = False;

  // Settings
  +++AB_Settings+++

  // Load libraries
  +++AB_LoadLibraries+++

  +++AB_LogVersions+++
  Log::DisplayScripts();

  // Init app and config
  +++AB_InitApp+++

  // Start app
  +++AB_StartApp+++

  while(True) {
    AB_Yield();

    +++AB_AppLoop+++
  }

  // Stop app and cleanup
  +++AB_EndApp+++

  // Unload libraries
  +++AB_UnloadLibraries+++
}
