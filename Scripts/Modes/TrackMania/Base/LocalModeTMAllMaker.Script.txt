/**
 * Base for a local game mode inside Trackmania Multienvironment.
 */
#Extends "Modes/TrackMania/ModeBase.Script.txt"

#Const MB_TMAll_Version     "2024-08-01"
#Const MB_TMAll_ScriptName  "Modes/TrackMania/Base/ModeTMAll.Script.txt"

#Include "Libs/Nadeo/Env.Script.txt" as Env
#Include "Libs/Nadeo/Log.Script.txt" as Log
#Include "Libs/domino54/TrackMania/GameplayCoefs_Server.Script.txt" as GameplayCoefs_Server
#Include "Libs/domino54/CustomSkins_LocalData.Script.txt" as CustomSkins_LocalData
#Include "Libs/domino54/HttpClient.Script.txt" as HttpClient
#Include "Libs/domino54/Openplanet_LocalData.Script.txt" as Openplanet_LocalData
#Include "Libs/domino54/PlayerModels_Data.Script.txt" as PlayerModels_Data
#Include "Libs/domino54/PlayerModels_Server.Script.txt" as PlayerModels_Server
#Include "Libs/domino54/TextLibExt.Script.txt" as TextLibExt

/// Environment in which the script runs
#Setting S_ScriptEnvironment "production" /*"development"*/ as "<hidden>"

// ---------------------------------- //
// Extends
// ---------------------------------- //
***LogVersion***
***
MB_LogVersion(MB_TMAll_ScriptName, MB_TMAll_Version);
MB_LogVersion(Env::ScriptName, Env::Version);
MB_LogVersion(Log::ScriptName, Log::Version);
MB_LogVersion(CustomSkins_LocalData::ScriptName, CustomSkins_LocalData::Version);
MB_LogVersion(GameplayCoefs_Server::ScriptName, GameplayCoefs_Server::Version);
MB_LogVersion(HttpClient::ScriptName, HttpClient::Version);
MB_LogVersion(Openplanet_LocalData::ScriptName, Openplanet_LocalData::Version);
MB_LogVersion(PlayerModels_Data::ScriptName, PlayerModels_Data::Version);
MB_LogVersion(PlayerModels_Server::ScriptName, PlayerModels_Server::Version);
MB_LogVersion(TextLibExt::ScriptName, TextLibExt::Version);
***

// ---------------------------------- //
// Init server
// ---------------------------------- //
***InitServer***
***
Env::Load();
Env::Set(S_ScriptEnvironment);
Log::Load();
HttpClient::Load();
CustomSkins_LocalData::Load();
// Yield only once, because only the selected skins will be loaded.
CustomSkins_LocalData::Yield();
Openplanet_LocalData::Load();
GameplayCoefs_Server::Load();
PlayerModels_Data::Load();

while (PlayerModels_Data::Loading()) {
  MB_Yield();
}
***

// ---------------------------------- //
// Before load map
// ---------------------------------- //
***BeforeLoadMap***
***
ItemList_Begin();

PlayerModels_Server::Load(This, PlayerModels_Server::K_Options {
  // Ensure that we only load the skins that are absolutely necessary.
  SkinIdAllowlist = PlayerModels_Server::GetLocalPlayerSkinIds()
});

+++ItemList+++

ItemList_End();
***

// ---------------------------------- //
// Init map
// ---------------------------------- //
***InitMap***
***
GameplayCoefs_Server::ReadValuesFromMap(Map);
PlayerModels_Server::SetMapProperties(Map.CollectionName, MapPlayerModelName);
***

// ---------------------------------- //
// Yield
// ---------------------------------- //
***Yield***
***
HttpClient::Yield();
***

// ---------------------------------- //
// End server
// ---------------------------------- //
***EndServer***
***
HttpClient::Unload();
PlayerModels_Server::Unload(This);
CustomSkins_LocalData::Unload();
GameplayCoefs_Server::Unload();
PlayerModels_Data::Unload();
Log::Unload();
Env::Unload();
***

// ---------------------------------- //
// Functions
// ---------------------------------- //

/**
 * Automatically assign all custom gameplay properties to a player.
 */
 Void TMAll_SetPlayerAutoGameplay(CTmPlayer _Player) {
  declare Player <=> _Player;

  +++TMAll_BeforeAutoGameplay+++

  GameplayCoefs_Server::AssignPlayerCoefs(_Player);
  PlayerModels_Server::AssignModel(_Player);

  +++TMAll_AfterAutoGameplay+++
}
