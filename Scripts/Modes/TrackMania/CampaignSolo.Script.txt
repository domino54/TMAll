#Extends "Modes/TrackMania/CampaignBase.Script.txt"

***UnlockAccordingCampaign***
***
declare Integer IndexCampaign = 0;
***

***SetRaceMode***
***
declare netwrite Integer	Net_RaceMode	for UI;
Net_RaceMode = TMC_RACEMODE_SOLOVR;
***

***StartSymbiose***
***
declare Integer FakeVariable = 3;
***

***LoadGameLib***
***
Game::Load(This, "Campaign_Solo", True);
***

***InitCampaign***
***
declare FakeVariable2 = 3;
***

***BeforeStart***
***
GetAsyncRecord(True);

***

***EventWayPointEndRace***
***
GetAsyncRecord(False);
***


***FunctionWaitForChallengeChoice***
***
if(G_RaceMode == TMC_RACEMODE_MEDAL) 
{
} 
else if(G_RaceMode == TMC_RACEMODE_ONLINE) 
{
}
***


***GetPlayerBestGhost***
***
declare Text GhostName = "Solo_BestGhost";
G_PlayerGhost 					= Ghosts::GetPlayerGhost(GhostName);
declare CGhost PlayerGhost <=> Ghosts::GetGhostFromPlayer(Players[G_ThePlayerId], "");
if(PlayerGhost != Null)
{
	G_TimesOnMap[TMC_MEDAL_PLAYER] = PlayerGhost.Result.Time;
}
***


***SavePlayerBestGhost***
***
if(G_PlayerGhost != Null && G_HasNewScore) {
}
***

***RankingSequence***
***
MapRankingSequence();
Game::WaitTime(500);
RankingSequence();
***


***ReleasePlayerGhost***
***
G_PlayerGhost = Null;
***

Void SendOnlineTableToMl(CHighScoreList _HighScoreList, Text _Table, Boolean _TopRecord) {
	
	declare Integer[] 	RankNumbers;
	declare Text[]		NameRanking;
	declare Integer[] 	TimeRanking;
	declare Integer		PlayerIndex;
	
	foreach(Index => Record in _HighScoreList.HighScores) {
		if(_TopRecord) {
			RankNumbers.add(Record.Rank+1);
		} else {
			RankNumbers.add(Record.Rank);
		}
		NameRanking.add(Record.Name);
		TimeRanking.add(Record.Time);
		if(Record.Name == Players[G_ThePlayerId].User.Name) {
			PlayerIndex = Index;
		}
	}
	
	for(I, _HighScoreList.HighScores.count, 9) {
		if(_TopRecord) {
			RankNumbers.add(I+1);
		} else {
			RankNumbers.add(I);
		}
		NameRanking.add("-");
		TimeRanking.add(0);
	}
}

Void GetAsyncRecord(Boolean _StartTable) {
}